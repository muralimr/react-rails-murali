{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar server_1 = __importDefault(require(\"react-dom/server\"));\n\nfunction handleRenderFunctionIssue(options) {\n  var e = options.e,\n      name = options.name;\n  var msg = '';\n\n  if (name) {\n    var lastLine = 'A Render-Function takes a single arg of props (and the location for react-router) ' + 'and returns a ReactElement.';\n    var shouldBeRenderFunctionError = \"ERROR: ReactOnRails is incorrectly detecting Render-Function to be false. The React\\ncomponent '\" + name + \"' seems to be a Render-Function.\\n\" + lastLine;\n    var reMatchShouldBeGeneratorError = /Can't add property context, object is not extensible/;\n\n    if (reMatchShouldBeGeneratorError.test(e.message)) {\n      msg += shouldBeRenderFunctionError + \"\\n\\n\";\n      console.error(shouldBeRenderFunctionError);\n    }\n\n    shouldBeRenderFunctionError = \"ERROR: ReactOnRails is incorrectly detecting renderFunction to be true, but the React\\ncomponent '\" + name + \"' is not a Render-Function.\\n\" + lastLine;\n    var reMatchShouldNotBeGeneratorError = /Cannot call a class as a function/;\n\n    if (reMatchShouldNotBeGeneratorError.test(e.message)) {\n      msg += shouldBeRenderFunctionError + \"\\n\\n\";\n      console.error(shouldBeRenderFunctionError);\n    }\n  }\n\n  return msg;\n}\n\nvar handleError = function handleError(options) {\n  var e = options.e,\n      jsCode = options.jsCode,\n      serverSide = options.serverSide;\n  console.error('Exception in rendering!');\n  var msg = handleRenderFunctionIssue(options);\n\n  if (jsCode) {\n    console.error(\"JS code was: \" + jsCode);\n  }\n\n  if (e.fileName) {\n    console.error(\"location: \" + e.fileName + \":\" + e.lineNumber);\n  }\n\n  console.error(\"message: \" + e.message);\n  console.error(\"stack: \" + e.stack);\n\n  if (serverSide) {\n    msg += \"Exception in rendering!\\n\" + (e.fileName ? \"\\nlocation: \" + e.fileName + \":\" + e.lineNumber : '') + \"\\nMessage: \" + e.message + \"\\n\\n\" + e.stack;\n    var reactElement = react_1[\"default\"].createElement('pre', null, msg);\n    return server_1[\"default\"].renderToString(reactElement);\n  }\n\n  return \"undefined\";\n};\n\nexports[\"default\"] = handleError;","map":null,"metadata":{},"sourceType":"module"}