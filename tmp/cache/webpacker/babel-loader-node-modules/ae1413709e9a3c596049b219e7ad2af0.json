{"ast":null,"code":"var _jsxFileName = \"/home/dhamodharan/Documents/ROR/rails-react-murali/app/javascript/bundles/tests/CreateTest.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// app/javascript/bundles/tests/CreateTest.js\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nvar CreateTest = /*#__PURE__*/function (_React$Component) {\n  _inherits(CreateTest, _React$Component);\n\n  var _super = _createSuper(CreateTest);\n\n  _createClass(CreateTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var initialPlanets = [];\n      fetch('/api/v1/tests/1/get_roles').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        initialPlanets = data.map(function (planet) {\n          return planet;\n        });\n        console.log(initialPlanets);\n\n        _this2.setState({\n          planets: initialPlanets\n        });\n      });\n    }\n  }]);\n\n  function CreateTest(props) {\n    var _this;\n\n    _classCallCheck(this, CreateTest);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.createTestRequest = function (event) {\n      console.log('this.state', _this.state);\n      fetch('/api/v1/tests', {\n        method: 'post',\n        body: JSON.stringify(_this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        // alert('Quiz created successfully');\n        // location.href = '/';\n        _this.props.history.push(\"\");\n      });\n    };\n\n    _this.state = {\n      pri: '',\n      question: '',\n      team_stages: '',\n      appears_day: '',\n      frequency: '',\n      type: '',\n      role: '',\n      required: '',\n      conditions: '',\n      mapping: ''\n    };\n    _this.state = {\n      planets: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateTest, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pri = _this$state.pri,\n          question = _this$state.question,\n          team_stages = _this$state.team_stages,\n          appears_day = _this$state.appears_day,\n          frequency = _this$state.frequency,\n          types = _this$state.types,\n          role = _this$state.role,\n          required = _this$state.required,\n          conditions = _this$state.conditions,\n          mapping = _this$state.mapping;\n      var planets = this.state.planets;\n      var optionItems = planets.map(function (planet) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: planet.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, planet.name);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Pri: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pri\",\n        value: pri,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Question: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        value: question,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"Team stages: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"team_stages\",\n        value: team_stages,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \"Appears day: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"appears_day\",\n        value: appears_day,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"Frequency: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"frequency\",\n        value: frequency,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, \"Type: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"types\",\n        value: types,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"Role: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"role\",\n        value: role,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"role\",\n        value: role,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, optionItems)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, \"required: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"required\",\n        value: required,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, \"conditions: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"conditions\",\n        value: conditions,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, \"Mapping: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"mapping\",\n        value: mapping,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.createTestRequest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, \"Create\"));\n    }\n  }]);\n\n  return CreateTest;\n}(React.Component);\n\nexport { CreateTest as default };","map":{"version":3,"sources":["/home/dhamodharan/Documents/ROR/rails-react-murali/app/javascript/bundles/tests/CreateTest.js"],"names":["React","Redirect","CreateTest","initialPlanets","fetch","then","response","json","data","map","planet","console","log","setState","planets","props","handleInputChange","event","target","name","value","createTestRequest","state","method","body","JSON","stringify","headers","history","push","pri","question","team_stages","appears_day","frequency","type","role","required","conditions","mapping","types","optionItems","Component"],"mappings":"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","sourcesContent":["// app/javascript/bundles/tests/CreateTest.js\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nexport default class CreateTest extends React.Component {\n   componentDidMount() {\n    let initialPlanets = [];\n    fetch('/api/v1/tests/1/get_roles')\n        .then(response => {\n            return response.json();\n        }).then(data => {\n        initialPlanets = data.map((planet) => {\n            return planet\n        });\n        console.log(initialPlanets);\n        this.setState({\n            planets: initialPlanets,\n        });\n    });\n}\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pri:'',\n      question:'',\n      team_stages:'',\n      appears_day:'' ,\n      frequency:'' ,\n      type:'' ,\n      role: '' ,\n      required: '',\n      conditions: '',\n      mapping: ''\n    };\n    this.state = {\n            planets: [],\n        };\n  }\n\n\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  createTestRequest = (event) => {\n    console.log('this.state', this.state);\n    fetch('/api/v1/tests', {\n      method: 'post',\n      body: JSON.stringify(this.state),\n      headers: { 'Content-Type': 'application/json' },\n    }).then((response) => {\n      // alert('Quiz created successfully');\n      // location.href = '/';\n      this.props.history.push(\"\");\n    });\n  }\n\n  render() {\n    const {pri, question, team_stages, appears_day, frequency, types, role, required, conditions, mapping} = this.state;\n    let planets = this.state.planets;\n        let optionItems = planets.map((planet) =>\n                <option key={planet.name}>{planet.name}</option>\n            );\n    return (\n      <div>\n        <h3>New Quiz</h3>         \n        <div>\n          <label>Pri: </label>\n          <input\n            type='number'\n            name='pri'\n            value={pri}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Question: </label>\n          <input\n            type='text'\n            name='question'\n            value={question}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Team stages: </label>\n          <input\n            type='text'\n            name='team_stages'\n            value={team_stages}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Appears day: </label>\n          <input\n            type='text'\n            name='appears_day'\n            value={appears_day}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Frequency: </label>\n          <input\n            type='text'\n            name='frequency'\n            value={frequency}\n            onChange={this.handleInputChange}\n            />\n        </div>\n         <div>\n          <label>Type: </label>\n          <input\n            type='text'\n            name='types'\n            value={types}\n            onChange={this.handleInputChange}\n            />\n        </div>\n         <div>\n          <label>Role: </label>\n          <input\n            type='text'\n            name='role'\n            value={role}\n            onChange={this.handleInputChange}\n            />\n            <select name='role'\n            value={role}\n            onChange={this.handleInputChange}>\n                {optionItems}\n             </select>\n        </div>\n         <div>\n          <label>required: </label>\n          <input\n            type='text'\n            name='required'\n            value={required}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>conditions: </label>\n          <input\n            type='text'\n            name='conditions'\n            value={conditions}\n            onChange={this.handleInputChange}\n            />\n        </div>\n         <div>\n          <label>Mapping: </label>\n          <input\n            type='text'\n            name='mapping'\n            value={mapping}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <button onClick={this.createTestRequest}>Create</button>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}